<html>
	<head>
		<title>OverAll</title>
		<link href="/css/bootstrap.min.css" rel="stylesheet" type="text/css">
		<link href="/css/style.css" rel="stylesheet" type="text/css">
	</head>
	<body>
		<div class="main_container">
			<%-	include("partials/nav") %>
			<div class="form-group">
				<label for="country">Select Country</label>
				<%-	include("partials/header") %>
			</div>
			<div class="response">
				
			</div>
		</div>
		<div class="get_rule_modal modal" tabindex="-1" role="dialog" data-backdrop="static">
		  <div class="modal-dialog" role="document">
			<div class="modal-content">
			  <div class="modal-header">
				<h5 class="modal-title" style="float:left;">Property Value</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close" style="float:right;">
				  <span aria-hidden="true">&times;</span>
				</button>
			  </div><input type="hidden" id="key_remove">
			  <div class="modal-body">
				
			  </div>
			  <div class="modal-footer">
				<button type="button" class="btn btn-danger get_remove">Remove</button>
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
			  </div>
			</div>
		  </div>
		</div>
		
		<div class="add_rule_modal modal" tabindex="-1" role="dialog" data-backdrop="static">
		  <div class="modal-dialog" role="document">
			<div class="modal-content">
			  <div class="modal-header">
				<h5 class="modal-title" style="float:left;">Property Value</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close" style="float:right;">
				  <span aria-hidden="true">&times;</span>
				</button>
			  </div><input type="hidden" id="key_add">
			  <div class="modal-body">
				<div class="form-group row">
					<label class="col-sm-2 col-form-label">Name</label>
					<div class="col-sm-10">
					  <input type="text" readonly class="form-control-plaintext" id="staticName" >
					</div>
				</div>
				<ul class="control"><li class='new_item'><img src="/images/new_item.png" >New</li><li class="delete_item"><img src="/images/delete.png" >Delete</li></ul>
				<div class="rule_div">
					<div class="rule_item">
						<h5>Name</h5>
						<ul>
						</ul>
					</div>
					<div class="desc_item">
						<h5>Description</h5>
						<p style="padding:10px;">Please specify the condition to filter</p>
						<div class="content" id="content1">
							<div class="form-group col-md-2 right">
							  <select class="form-control inputType">
								<option value=''>Choose...</option>
								<option value="sources">Sources</option>
								<option value="property">Property</option>
							  </select>
							</div>
							<div class="form-group col-md-2 right">
							  <select class="form-control inputValue">
								<option value=''>Choose...</option>
							  </select>
							</div>
							<div class="form-group col-md-2 right" style="display:none;">
							  <input type="text" class="form-control inputTag" placeholder="Add Tag"/>
							</div>
							<div class="form-group col-md-2 right">
							  <select class="form-control inputAction">
								<option value=''>Choose...</option>
								<option value="1">Greater Than</option>
								<option value="2">Less Than</option>
								<option value="3">Equals To</option>
								<option value="4">Not Equals To</option>
								<option value="5">Contains</option>
								<option value="6">Not Contains</option>
								<option value="7">Is Multiple</option>
								<option value="8">Is Single</option>
								<option value="9">Is Empty</option>
								<option value="10">Url</option>
								<option value="11">Have</option>
								<option value="12">Not Have</option>
								<option value="13">startsWith</option>
								<option value="14">Up to Next</option>
							  </select>
							</div>
							<div class="form-group col-md-2 right" style="display:none;">
							  <input type="text" class="form-control inputActionValue" placeholder="Value"/>
							</div>
							<div class="form-group col-md-2">
							  <select class="form-control inputCondition">
								<option value="And">And</option>
								<option value="Or">Or</option>
							  </select>
							</div>
							<div class="form-group col-md-2 right" style="line-height:35px;">
							  <a href="javascript:void(0)" class="add_item_row">Add</a>&nbsp;&nbsp;
							  <!-- <a href="javascript:void(0)">Delete</a> -->
							</div>
						</div>
						
						<div class="form-group col-md-12 resultant">
							<label>Result</label>
							<div class="result" id="result1">
								<div class="form-group col-md-2 right">
								  <select class="form-control inputType">
									<option value=''>Choose...</option>
									<option value="sources">Sources</option>
									<option value="property">Property</option>
									<option value="custom">Custom</option>
								  </select>
								</div>
								<div class="form-group col-md-2 right">
								  <select class="form-control inputValue">
									<option value=''>Choose...</option>
								  </select>
								</div>
								<div class="form-group col-md-2 right" style="display:none;">
								  <input type="text" class="form-control inputTag" placeholder="Add Tag"/>
								</div>
								<div class="form-group col-md-2 right" style="display:none;">
								  <input type="text" class="form-control customValue" placeholder="Value"/>
								</div>
								<div class="form-group col-md-5 split" style="display:none;">
									<input type="text" class="form-control col-md-2 splitDem" placeholder="Delimeter" style="width:40%;"/>&nbsp;&nbsp;&nbsp;<select class="form-control col-md-2 splitValue" style="width:40%;margin-left:10px;">
									<option value=''>Value...</option>
									<option value='1'>1</option>
									<option value='2'>2</option>
								  </select>
								</div>
								<div class="form-group col-md-4 between" style="display:none;">
									<input type="text" class="form-control col-md-2 between1" placeholder="Value1" style="width:40%;"/>&nbsp;&nbsp;&nbsp;To&nbsp;&nbsp;&nbsp;<input type="text" class="form-control col-md-2 between2" placeholder="Value1" style="width:40%;float:right;"/>
								</div>
								<div class="form-group col-md-4 index" style="display:none;">
									<input type="number" class="form-control col-md-2 indexValue" placeholder="Value" style="width:40%;"/>
								</div>
								<div class="form-group col-md-6 right" style="line-height:35px;">
								  <a href="javascript:void(0)" class="add_item_result">Add</a>&nbsp;&nbsp;&nbsp;<a href="javascript:void(0)" class="add_item_split">Use Split</a>&nbsp;&nbsp;&nbsp;<a href="javascript:void(0)" class="add_item_between">Use Between</a>&nbsp;&nbsp;&nbsp;<a href="javascript:void(0)" class="add_item_index">Use IndexOf</a>
								</div>
							</div>	
						</div>
						<div class="form-group col-md-12 concat">
							<input type="checkbox" class="concat_check" />&nbsp;&nbsp;Concatenate the result
							<input type="text" class="concatdem" placeholder="Add Delimeter" style="display:none;"/>
						</div>
						<div class="form-group col-md-12 skip">
							<input type="checkbox" class="skip_check" />&nbsp;&nbsp;Add word to skip
							<input type="text" class="skipword" placeholder="Add multiple word using | sperated" style="display:none;width:50%;"/>
						</div>
						<div class="form-group col-md-12 replace">
							<input type="checkbox" class="replace_check" />&nbsp;&nbsp;Add word to replace
							<input type="text" class="replaceword" placeholder="key:value, key1:value1(Add using comma sperated like)" style="display:none;width:50%;"/>
						</div>
						<div class="form-group col-md-12 default">
							<label class="col-sm-3 col-form-label">Add Default Value</label>
							<div class="col-sm-9">
							  <input type="text" class="form-control defaultValue"/>
							</div>
						</div>
						
					</div>
					
				</div>
			  </div>
			  <div class="modal-footer">
				<button type="button" class="btn btn-danger add_val">Ok</button>
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
			  </div>
			</div>
		  </div>
		</div>
		
		<div class="free_modal modal" tabindex="-1" role="dialog" data-backdrop="static">
		  <div class="modal-dialog" role="document">
			<div class="modal-content">
			  <div class="modal-header">
				<h5 class="modal-title" style="float:left;"></h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close" style="float:right;">
				  <span aria-hidden="true">&times;</span>
				</button>
			  </div><input type="hidden" id="key_remove">
			  <div class="modal-body">
				
			  </div>
			  <div class="modal-footer">
				<!-- <button type="button" class="btn btn-danger get_remove">Remove</button> -->
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Add</button>
			  </div>
			</div>
		  </div>
		</div>
		
		<div class="hidden">
			<div class="content">
				<div class="form-group col-md-2 right">
				  <select class="form-control inputType">
					<option value=''>Choose...</option>
					<option value="sources">Sources</option>
					<option value="property">Property</option>
				  </select>
				</div>
				<div class="form-group col-md-2 right">
				  <select class="form-control inputValue">
					<option value=''>Choose...</option>
				  </select>
				</div>
				<div class="form-group col-md-2 right" style="display:none;">
				  <input type="text" class="form-control inputTag" placeholder="Add Tag"/>
				</div>
				<div class="form-group col-md-2 right">
				  <select class="form-control inputAction">
					<option value=''>Choose...</option>
					<option value="1">Greater Than</option>
					<option value="2">Less Than</option>
					<option value="3">Equals To</option>
					<option value="4">Not Equals To</option>
					<option value="5">Contains</option>
					<option value="6">Not Contains</option>
					<option value="7">Is Multiple</option>
					<option value="8">Is Single</option>
					<option value="9">Is Empty</option>
					<option value="10">Url</option>
					<option value="11">Have</option>
					<option value="12">Not Have</option>
					<option value="13">startsWith</option>
					<option value="14">Up to Next</option>
				  </select>
				</div>
				<div class="form-group col-md-2 right" style="display:none;">
				  <input type="text" class="form-control inputActionValue" placeholder="Value"/>
				</div>
				
				<div class="form-group col-md-2">
				  <select class="form-control inputCondition">
					<option value="And">And</option>
					<option value="Or">Or</option>
				  </select>
				</div>
				<div class="form-group col-md-2 right" style="line-height:35px;">
				  <a href="javascript:void(0)" class="add_item_row">Add</a>&nbsp;&nbsp;<a href="javascript:void(0)" class="delete_item_row">Delete</a>
				</div>
			</div>
		</div>
		
		<div class="hidden1" style="display:none;">
			<div class="result">
				<div class="form-group col-md-2 right">
				  <select class="form-control inputType">
					<option value=''>Choose...</option>
					<option value="sources">Sources</option>
					<option value="property">Property</option>
					<option value="custom">Custom</option>
				  </select>
				</div>
				<div class="form-group col-md-2 right">
				  <select class="form-control inputValue">
					<option value=''>Choose...</option>
				  </select>
				</div>
				<div class="form-group col-md-2 right" style="display:none;">
				  <input type="text" class="form-control inputTag" placeholder="Add Tag"/>
				</div>
				<div class="form-group col-md-2 right" style="display:none;">
				  <input type="text" class="form-control customValue" placeholder="Value"/>
				</div>
				<div class="form-group col-md-5 split" style="display:none;">
					<input type="text" class="col-md-2 form-control splitDem" placeholder="Delimeter" style="width:40%;"/>&nbsp;&nbsp;&nbsp;<select class="col-md-2 form-control splitValue" style="width:40%;margin-left:10px;">
					<option value=''>Value...</option>
					<option value='1'>1</option>
					<option value='2'>2</option>
				  </select>
				</div>
				<div class="form-group col-md-4 between" style="display:none;">
					<input type="text" class="form-control col-md-2 between1" placeholder="Value" style="width:40%;"/>&nbsp;&nbsp;&nbsp;To&nbsp;&nbsp;&nbsp;<input type="text" class="form-control col-md-2 between2" placeholder="Value" style="width:40%;float:right;"/>
				</div>
				<div class="form-group col-md-4 index" style="display:none;">
					<input type="number" class="form-control col-md-2 indexValue" placeholder="Value" style="width:40%;"/>
				</div>
				<div class="form-group col-md-6 right" style="line-height:35px;">
				  <a href="javascript:void(0)" class="add_item_result">Add</a>&nbsp;&nbsp;<a href="javascript:void(0)" class="delete_item_row">Delete</a>&nbsp;&nbsp;&nbsp;<a href="javascript:void(0)" class="add_item_split">Use Split</a>&nbsp;&nbsp;&nbsp;<a href="javascript:void(0)" class="add_item_between">Use Between</a>&nbsp;&nbsp;&nbsp;<a href="javascript:void(0)" class="add_item_index">Use IndexOf</a>
				</div>
			</div>	
		</div>
		
		<script src="/js/jquery-3.4.1.min.js"></script>
		<script src="/js/bootstrap.min.js"></script>
		<script>
		var sources = [];
		var property = [];
		$(document).on('click', '.desc_item select, .desc_item input, .desc_item a', function(){
			if($('.rule_item li').length == 0){
				alert('Please select the rule name first');
				event.preventDefault();
				return false;				
			}else{
				var i=0
				$('.rule_item li').each(function(){
					if($(this).hasClass('active')){
						i++;
					}
				})
				if(i == 0){
					alert('Please select the rule name first');
					event.preventDefault(); 
					return false;				
				}
			}
		})
		$('.new_item').on('click',function(){
			$('.rule_div .rule_item li').each(function(){
				if($(this).hasClass('active')){
					var h = {};
					var rule ='rule';
					h[rule] = {};
					h[rule]['rules'] = [];
					h[rule]['result'] = [];
					h[rule]['rulename'] = $(this).text();
					
					
					$('.desc_item .content').each(function(){
						var k = {};
						k['type'] = $(this).find('.inputType').val();
						k['typeValue'] = $(this).find('.inputValue').val();
						k['tag'] = $(this).find('.inputTag').val();
						k['action'] = $(this).find('.inputAction').val();
						k['actionValue'] = $(this).find('.inputActionValue').val();
						k['actionResultValue'] = $(this).find('.inputActionResultValue').val();
						k['actionDelimeter'] = $(this).find('.inputActionDelimeter').val();
						k['actionDelimeterValue'] = $(this).find('.inputActionDelimeterValue').val();
						k['condition'] = $(this).find('.inputCondition').val();
						h[rule]['rules'].push(k);
					})
					$('.desc_item .result').each(function(){
						var k = {};
						k['type'] = $(this).find('.inputType').val();
						k['typeValue'] = $(this).find('.inputValue').val();
						k['tag'] = $(this).find('.inputTag').val();
						k['customValue'] = $(this).find('.customValue').val();
						k['splitDel'] = $(this).find('.splitDem').val();
						k['splitValue'] = $(this).find('.splitValue').val();
						k['between1'] = $(this).find('.between1').val();
						k['between2'] = $(this).find('.between2').val();
						k['indexValue'] = $(this).find('.indexValue').val();
						h[rule]['result'].push(k);
					})
					
					h[rule]['concatenate'] = $('.desc_item .concatdem').val();
					h[rule]['skipword'] = $('.desc_item .skipword').val();
					h[rule]['replaceword'] = $('.desc_item .replaceword').val();
					h[rule]['defaultValue'] = $('.desc_item .defaultValue').val();
					$(this).data('rule_data',h);
				}
			})
			
			
			$('.free_modal .modal-title').text('Add Rule Name');
			$('.free_modal .modal-body').html('');
			$('.free_modal .modal-body').html('<input type="text" id="rule_name" class="form-control" />');
			$('.free_modal').modal('show');
		})
		$('.free_modal').on('hidden.bs.modal', function () {
			if($('#rule_name').val()!=''){
				$('.desc_item .content').remove();
				
				var id = 'content1';
				$('.hidden > .content').attr('id', id);
				$('.hidden > .content .delete_item_row').css('display','none');
				var str = $('.hidden').html();
				$('.desc_item .resultant').before(str);
				$('.hidden > .content').removeAttr('id');
				$('.desc_item .result').remove();
				var id = 'result1';
				$('.hidden1 > .result').attr('id', id);
				$('.hidden1 > .result .delete_item_row').css('display','none');
				var str = $('.hidden1').html();
				$('.desc_item .resultant').append(str);
				$('.hidden1 > .result').removeAttr('id');
				$('.concat_check').prop('checked',false);
				$('.desc_item .concatdem').hide();
				$('.desc_item .concatdem').val('');
				$('.skip_check').prop('checked',false);
				$('.desc_item .skipword').hide();
				$('.desc_item .skipword').val('');
				$('.replace_check').prop('checked',false);
				$('.desc_item .replaceword').hide();
				$('.desc_item .replaceword').val('');
				$('.desc_item .defaultValue').val('');
				$('.rule_div .rule_item li').removeClass('active');
				$('.rule_div .rule_item ul').append('<li class="active">'+$('#rule_name').val()+'</li>');
				$('#rule_name').val('');
				$('.rule_div .rule_item li').each(function(){
					console.log($(this).data('rule_data'));
				})
			}
		});
		$(document).ready(function(){
			$('#country').on('change', function(){
				if($(this).val() != 0){
					$.ajax({
						type:'POST',
						url:'/checkfile',
						data: {country : $('#country').val()}
					}).done(function(resp){
						var data = JSON.parse(resp);
						var source = data.sources;
						source.forEach(function(n2){
							sources.push(n2.name);
						})
					})
				
					$.ajax({
						type:'POST',
						url:'/gpropw',
						data: {country : $('#country').val()}
					}).done(function(data){
						var data1 = data.data;
						var ass_arr = data.assigend_array;
						
						var str = '';
						str+= '<div class="property_structure"><table>';
						data1.forEach(function(elem){
							var arr = elem.split(';');
							property.push(arr[0]);
							//for (const [key, value] of Object.entries(ass_arr)) {
								if(ass_arr.hasOwnProperty(arr[0])){
									str+= '<tr><td>'+arr[0]+'</td>';
									str+= '<td><span class="btn btn-danger" onClick="get_input('
									str+= "'"+arr[0]+"'";
									str+= ')" style="margin-left:10px;">Assigned</span></td>';
								}else{
									str+= '<tr><td>'+arr[0]+'</td><td><span class="btn btn-danger" onClick="get_input1(';
									str+= "'"+arr[0]+"'";
									str+= ')" style="margin-left:10px;">Add</span></td>';
								}
							//}
							
							str+= '</tr>';
						})
						str+= '</table>';
						str+= '</div>';
						$('.response').html('');
						$('.response').html(str);
					})
				}else{
					$('.response').html('');
				}
			})
		})
		
		function get_input(key){
			$.ajax({
				type:'POST',
				url:'/get-input',
				data:{key: key, country: $('#country').val()}
			}).done(function(data){
				
				if(data.hasOwnProperty('sample')){
					$('.get_rule_modal .modal-body').html('');
					var str = '';
					str+= '<h5><b>Value:-</b> </h5><ul>';
					data.sample.forEach(function(elem){
						str+= '<li>'+elem+'</li>';
					})
					str+= '</ul>';
					
					if(data.hasOwnProperty("rules")){
						str+= '<h5><b>Rules:-</b> </h5><ul>';
						data.rules.forEach(function(elem){
							for (const [key, value] of Object.entries(elem)) {
								str+= '<li>'+key+' : '+value+'</li>';
							}
						})
						str+= '</ul>';	
					}
					$('#key_remove').val('');
					$('#key_remove').val(key);
					$('.get_rule_modal .modal-body').html(str);
					$('.get_rule_modal').modal('show');
				}else{
				
					$('.rule_div .rule_item li').remove();
					$('.desc_item .content').remove();
					data.rules.forEach(function(elem){
						$('.rule_div .rule_item ul').append('<li>'+elem.rule.rulename+'</li>');
						$('.rule_div .rule_item li').each(function(){
							if($(this).text() == elem.rule.rulename){
								$(this).data('rule_data', elem);
							}
						})
					})
					$('.rule_item ul li:last-child').addClass('active');
					$('.rule_item li').each(function(){
					if($(this).hasClass('active')){
					$('.desc_item .content').remove();
					$('.desc_item .result').remove();
						var data = $(this).data('rule_data');
						console.log(data);
						var i = 1;
						var len = data.rule.rules.length;
						for (const [key, value] of Object.entries(data.rule.rules)) {
							
							//if(key != 0 && key != len){
								var id = 'content'+i;
								$('.hidden > .content').attr('id', id);
								if(i == 1){
									$('.hidden > .content .delete_item_row').hide();
								}else{
									$('.hidden > .content .delete_item_row').show();
								}
								var str = $('.hidden').html();
								$('.desc_item .resultant').before(str);
								var clas = $('.desc_item #'+id);
								clas.find('.inputType option[value="'+value.type+'"]').prop('selected', true);
								if(value.type == 'sources'){
									var str1 = '<option value="">Choose..</option>';
									sources.forEach(function(elem){
										str1+= '<option value="'+elem+'">'+elem+'</option>';
									})
									
									clas.find('.inputValue').empty().append(str1);
									
								}else if(value.type == 'property'){
									var str1 = '<option value="">Choose..</option>';
									property.forEach(function(elem){
										str1+= '<option value="'+elem+'">'+elem+'</option>';
									})
									
									clas.find('.inputValue').empty().append(str1);
									
								}
								clas.find('.inputValue option[value="'+value.typeValue+'"]').prop('selected', true);
								
								if(value.tag != ''){
									clas.find('.inputTag').val(value.tag);
									clas.find('.inputTag').parent('div').show();
								}
								clas.find('.inputAction option[value="'+value.action+'"]').prop('selected', true);
								if(value.actionValue != ''){
									clas.find('.inputActionValue').val(value.actionValue);
									clas.find('.inputActionValue').parent('div').show();
								}
								if(value.actionResultValue != ''){
									clas.find('.inputActionResultValue').val(value.actionResultValue);
									clas.find('.inputActionResultValue').parent('div').show();
								}
								if(value.actionDelimeter != ''){
									clas.find('.inputActionDelimeter').val(value.actionDelimeter);
									clas.find('.inputActionDelimeter').parent('div').show();
								}
								if(value.actionDelimeterValue != ''){
									clas.find('.inputActionDelimeterValue').val(value.actionDelimeterValue);
									clas.find('.inputActionDelimeterValue').parent('div').show();
								}
								clas.find('.inputCondition option[value="'+value.condition+'"]').prop('selected', true);
								i++;
							//}
							}
							if(data.rule.defaultValue != ''){
								$('.desc_item .defaultValue').val(value.defaultValue);
							}else{
								$('.desc_item .defaultValue').val('');
							}
							if(data.rule.concatenate != ''){
								$('.desc_item .concat_check').prop('checked', true);
								$('.desc_item .concatdem').val(data.rule.concatenate);
								$('.desc_item .concatdem').show();
								
							}else{
								$('.desc_item .concat_check').prop('checked', false);
								$('.desc_item .concatdem').val('');
								$('.desc_item .concatdem').hide();
							}
							if(data.rule.skipword != ''){
								$('.desc_item .skip_check').prop('checked', true);
								$('.desc_item .skipword').val(data.rule.skipword);
								$('.desc_item .skipword').show();
								
							}else{
								$('.desc_item .skip_check').prop('checked', false);
								$('.desc_item .skipword').val('');
								$('.desc_item .skipword').hide();
							}
							if(data.rule.replaceword != ''){
								$('.desc_item .replace_check').prop('checked', true);
								$('.desc_item .replaceword').val(data.rule.replaceword);
								$('.desc_item .replaceword').show();
								
							}else{
								$('.desc_item .replace_check').prop('checked', false);
								$('.desc_item .replaceword').val('');
								$('.desc_item .replaceword').hide();
							}
							
							var k = 1;
							for (const [key, value] of Object.entries(data.rule.result)) {
								var id = 'result'+k;
								$('.hidden1 > .result').attr('id', id);
								if(k == 1){
									$('.hidden1 > .result .delete_item_row').hide();
								}else{
									$('.hidden1 > .result .delete_item_row').show();
								}
								var str = $('.hidden1').html();
								$('.desc_item .resultant').append(str);
								var clas = $('.resultant #'+id);
								clas.find('.inputType option[value="'+value.type+'"]').prop('selected', true);
								console.log(value.type);
								if(value.type == 'sources'){
									var str1 = '<option value="">Choose..</option>';
									sources.forEach(function(elem){
										str1+= '<option value="'+elem+'">'+elem+'</option>';
									})
									
									clas.find('.inputValue').empty().append(str1);
									clas.find('.inputValue option[value="'+value.typeValue+'"]').prop('selected', true);
									clas.find('.inputValue').parent('div').show();
									
									
								}else if(value.type == 'custom'){
									clas.find('.inputValue').parent('div').hide();
									clas.find('.inputTag').parent('div').hide();
									clas.find('.customValue').val(value.customValue);
									clas.find('.customValue').parent('div').show();
									
								}else if(value.type == 'property'){
									var str1 = '<option value="">Choose..</option>';
									property.forEach(function(elem){
										str1+= '<option value="'+elem+'">'+elem+'</option>';
									})
									
									clas.find('.inputValue').empty().append(str1);
									clas.find('.inputValue option[value="'+value.typeValue+'"]').prop('selected', true);
									clas.find('.inputValue').parent('div').show();
									clas.find('.inputTag').parent('div').hide();
									
								}
								if(value.tag != ''){
									clas.find('.inputTag').val(value.tag);
									clas.find('.inputTag').parent('div').show();
								}
								
								if(value.splitDel != ''){
									clas.find('.splitDem').val(value.splitDel);
									clas.find('.splitValue option[value="'+value.splitValue+'"]').prop('selected', true);
									clas.find('.splitDem').parent('div').show();
									clas.find('.add_item_split').text('Remove Split');
								}
								if(value.between1 != ''){
									clas.find('.between1').val(value.between1);
									clas.find('.between2').val(value.between2);
									clas.find('.between1').parent('div').show();
									clas.find('.add_item_between').text('Remove Between');
								}
								if(value.indexValue != ''){
									clas.find('.indexValue').val(value.indexValue);
									clas.find('.indexValue').parent('div').show();
									clas.find('.add_item_index').text('Remove IndexOf');
								}
								k++
							}
							
							
						}else{
							var id = 'content'+i;
							$('.hidden > .content').attr('id', id);
							if(i == 1){
								$('.hidden > .content .delete_item_row').hide();
							}else{
								$('.hidden > .content .delete_item_row').show();
							}
							var str = $('.hidden').html();
							$('.desc_item .resultant').before(str);
						}
					})
					
					$('#key_add').val(key);
					$('#staticName').val(key);
					$('.add_rule_modal').modal('show');
					
					
				}
				
			})
		}
		
		$(document).on('click','.get_remove', function(){
			var key = $('#key_remove').val();
			$.ajax({
				type:'POST',
				url:'/remove-key',
				data:{key: key, country: $('#country').val()}
			}).done(function(data){
				$('.property_structure tr').each(function(){
						if($(this).find("td:eq(0)").text() == key){
							$(this).find("td:eq(1)").html('');
							var str = '';
							str+= '<span class="btn btn-danger" onClick="get_input1('
							str+= "'"+key+"'";
							str+= ')" style="margin-left:10px;">Add</span>';
							$(this).find("td:eq(1)").html(str);
						}
					})
				$('.get_rule_modal').modal('hide');
			})
		})
		
		function get_input1(key){
			$('#key_add').val(key);
			$('#staticName').val(key);
			$('.add_rule_modal').modal('show');
		}
		$(document).on('change', '.inputType', function(){
			var str = $(this).val();
			var clas = $(this).parent('div').parent('div').attr('id');
			if(str != ''){
				if(str == 'sources'){
					var str1 = '<option value="">Choose..</option>';
					sources.forEach(function(elem){
						str1+= '<option value="'+elem+'">'+elem+'</option>';
					})
					
					$('#'+clas+' .inputValue').empty().append(str1);
					$('#'+clas+' .inputValue').parent('div').show();
					$('#'+clas+' .inputTag').parent('div').show();
					$('#'+clas+' .customValue').parent('div').hide();
				}else if(str == 'custom'){
					$('#'+clas+' .inputValue').parent('div').hide();
					$('#'+clas+' .inputTag').parent('div').hide();
					$('#'+clas+' .customValue').parent('div').show();
				}else{
					var str1 = '<option value="">Choose..</option>';
					property.forEach(function(elem){
						str1+= '<option value="'+elem+'">'+elem+'</option>';
					})
					
					$('#'+clas+' .inputValue').empty().append(str1);
					$('#'+clas+' .inputValue').parent('div').show();
					$('#'+clas+' .inputTag').parent('div').hide();
					$('#'+clas+' .customValue').parent('div').hide();
				}
				
			}else{
				
				$('#'+clas+' .inputValue').empty().append('<option value="">Choose...</option>');
				$('#'+clas+' .inputTag').parent('div').hide();
			}
			
		})
		
		$(document).on('change', '.inputAction', function(){
			var str = $(this).val();
			var clas = $(this).parent('div').parent('div').attr('id');
			if(str!=''){
				
				<!-- if(str == 7){ -->
					<!-- $('#'+clas+' .inputActionDelimeter').parent('div').show(); -->
					<!-- $('#'+clas+' .inputActionValue').parent('div').hide(); -->
					<!-- $('#'+clas+' .inputActionResultValue').parent('div').hide(); -->
					<!-- $('#'+clas+' .inputActionDelimeterValue').parent('div').hide(); -->
				<!-- }else if(str == 8){ -->
					<!-- $('#'+clas+' .inputActionDelimeter').parent('div').show(); -->
					<!-- $('#'+clas+' .inputActionDelimeterValue').parent('div').show(); -->
					<!-- $('#'+clas+' .inputActionValue').parent('div').hide(); -->
					<!-- $('#'+clas+' .inputActionResultValue').parent('div').hide(); -->
				<!-- }else if(str == 9){ -->
					<!-- $('#'+clas+' .inputActionValue').parent('div').show(); -->
					<!-- $('#'+clas+' .inputActionResultValue').parent('div').hide(); -->
					<!-- $('#'+clas+' .inputActionDelimeter').parent('div').hide(); -->
					<!-- $('#'+clas+' .inputActionDelimeterValue').parent('div').hide(); -->
				<!-- }else{ -->
					$('#'+clas+' .inputActionValue').parent('div').show();
					$('#'+clas+' .inputActionResultValue').parent('div').show();
					$('#'+clas+' .inputActionDelimeter').parent('div').hide();
					$('#'+clas+' .inputActionDelimeterValue').parent('div').hide();
					if(str == 10){
						$('#'+clas+' .inputActionValue').parent('div').hide();
					}else if(str > 6 && str < 11){
						$('#'+clas+' .inputActionValue').parent('div').hide();
					}
				//}	
			}else{
				$('#'+clas+' .inputActionValue').parent('div').hide();
				$('#'+clas+' .inputActionResultValue').parent('div').hide();
				$('#'+clas+' .inputActionDelimeter').parent('div').hide();
				$('#'+clas+' .inputActionDelimeterValue').parent('div').hide();
			}
			
		})
		
		$(document).on('click', '.add_item_row', function(){
			
			var item = $('.desc_item .content').length;
			item = item+1;
			var id = 'content'+item;
			$('.hidden > .content').attr('id', id);
			$('.hidden > .content .delete_item_row').show();
			var str = $('.hidden').html();
			$(this).parent('div').parent('div').after(str);
			$('.hidden > .content').removeAttr('id');
		})
		
		$(document).on('click', '.add_item_result', function(){
			
			var item = $('.desc_item .result').length;
			item = item+1;
			var id = 'result'+item;
			$('.hidden1 > .result').attr('id', id);
			$('.hidden1 > .result .delete_item_row').show();
			var str = $('.hidden1').html();
			$(this).parent('div').parent('div').after(str);
			$('.hidden1 > .result').removeAttr('id');
		})
		
		$(document).on('click', '.delete_item_row', function(){
			$(this).parent('div').parent('div').remove();
		})
		
		$(document).on('click', '.rule_item li', function(){
		
			$('.rule_div .rule_item li').each(function(){
				if($(this).hasClass('active')){
					var h = {};
					var rule ='rule';
					h[rule] = {};
					h[rule]['rules'] = [];
					h[rule]['result'] = [];
					h[rule]['rulename'] = $(this).text();
					
					
					$('.desc_item .content').each(function(){
						var k = {};
						k['type'] = $(this).find('.inputType').val();
						k['typeValue'] = $(this).find('.inputValue').val();
						k['tag'] = $(this).find('.inputTag').val();
						k['action'] = $(this).find('.inputAction').val();
						k['actionValue'] = $(this).find('.inputActionValue').val();
						k['actionResultValue'] = $(this).find('.inputActionResultValue').val();
						k['actionDelimeter'] = $(this).find('.inputActionDelimeter').val();
						k['actionDelimeterValue'] = $(this).find('.inputActionDelimeterValue').val();
						k['condition'] = $(this).find('.inputCondition').val();
						h[rule]['rules'].push(k);
					})
					$('.desc_item .result').each(function(){
						var k = {};
						k['type'] = $(this).find('.inputType').val();
						k['typeValue'] = $(this).find('.inputValue').val();
						k['tag'] = $(this).find('.inputTag').val();
						k['customValue'] = $(this).find('.customValue').val();
						k['splitDel'] = $(this).find('.splitDem').val();
						k['splitValue'] = $(this).find('.splitValue').val();
						k['between1'] = $(this).find('.between1').val();
						k['between2'] = $(this).find('.between2').val();
						k['indexValue'] = $(this).find('.indexValue').val();
						h[rule]['result'].push(k);
					})
					
					h[rule]['concatenate'] = $('.desc_item .concatdem').val();
					h[rule]['skipword'] = $('.desc_item .skipword').val();
					h[rule]['replaceword'] = $('.desc_item .replaceword').val();
					h[rule]['defaultValue'] = $('.desc_item .defaultValue').val();
					$(this).data('rule_data',h);
				}
			})
		
		
			if(!$(this).hasClass('active')){
				$('.desc_item .content').remove();
					$('.desc_item .result').remove();
						var data = $(this).data('rule_data');
						console.log(data);
						var i = 1;
						var len = data.rule.rules.length;
						for (const [key, value] of Object.entries(data.rule.rules)) {
							
							//if(key != 0 && key != len){
								var id = 'content'+i;
								$('.hidden > .content').attr('id', id);
								if(i == 1){
									$('.hidden > .content .delete_item_row').hide();
								}else{
									$('.hidden > .content .delete_item_row').show();
								}
								var str = $('.hidden').html();
								$('.desc_item .resultant').before(str);
								var clas = $('.desc_item #'+id);
								clas.find('.inputType option[value="'+value.type+'"]').prop('selected', true);
								if(value.type == 'sources'){
									var str1 = '<option value="">Choose..</option>';
									sources.forEach(function(elem){
										str1+= '<option value="'+elem+'">'+elem+'</option>';
									})
									
									clas.find('.inputValue').empty().append(str1);
									
								}else if(value.type == 'property'){
									var str1 = '<option value="">Choose..</option>';
									property.forEach(function(elem){
										str1+= '<option value="'+elem+'">'+elem+'</option>';
									})
									
									clas.find('.inputValue').empty().append(str1);
									
								}
								clas.find('.inputValue option[value="'+value.typeValue+'"]').prop('selected', true);
								if(value.tag != ''){
									clas.find('.inputTag').val(value.tag);
									clas.find('.inputTag').show();
								}
								clas.find('.inputAction option[value="'+value.action+'"]').prop('selected', true);
								if(value.actionValue != ''){
									clas.find('.inputActionValue').val(value.actionValue);
									clas.find('.inputActionValue').parent('div').show();
								}
								if(value.actionResultValue != ''){
									clas.find('.inputActionResultValue').val(value.actionResultValue);
									clas.find('.inputActionResultValue').parent('div').show();
								}
								if(value.actionDelimeter != ''){
									clas.find('.inputActionDelimeter').val(value.actionDelimeter);
									clas.find('.inputActionDelimeter').parent('div').show();
								}
								if(value.actionDelimeterValue != ''){
									clas.find('.inputActionDelimeterValue').val(value.actionDelimeterValue);
									clas.find('.inputActionDelimeterValue').parent('div').show();
								}
								clas.find('.inputCondition option[value="'+value.condition+'"]').prop('selected', true);
								i++;
							//}
							}
							if(data.rule.defaultValue != ''){
								$('.desc_item .defaultValue').val(value.defaultValue);
							}else{
								$('.desc_item .defaultValue').val('');
							}
							if(data.rule.concatenate != ''){
								$('.desc_item .concat_check').prop('checked', true);
								$('.desc_item .concatdem').val(data.rule.concatenate);
								$('.desc_item .concatdem').show();
								
							}else{
								$('.desc_item .concat_check').prop('checked', false);
								$('.desc_item .concatdem').val('');
								$('.desc_item .concatdem').hide();
							}
							if(data.rule.skipword != ''){
								$('.desc_item .skip_check').prop('checked', true);
								$('.desc_item .skipword').val(data.rule.skipword);
								$('.desc_item .skipword').show();
								
							}else{
								$('.desc_item .skip_check').prop('checked', false);
								$('.desc_item .skipword').val('');
								$('.desc_item .skipword').hide();
							}
							if(data.rule.replaceword != ''){
								$('.desc_item .replace_check').prop('checked', true);
								$('.desc_item .replaceword').val(data.rule.replaceword);
								$('.desc_item .replaceword').show();
								
							}else{
								$('.desc_item .replace_check').prop('checked', false);
								$('.desc_item .replaceword').val('');
								$('.desc_item .replaceword').hide();
							}
							var k = 1;
							for (const [key, value] of Object.entries(data.rule.result)) {
								var id = 'result'+k;
								$('.hidden1 > .result').attr('id', id);
								if(k == 1){
									$('.hidden1 > .result .delete_item_row').hide();
								}else{
									$('.hidden1 > .result .delete_item_row').show();
								}
								var str = $('.hidden1').html();
								$('.desc_item .resultant').append(str);
								var clas = $('.resultant #'+id);
								clas.find('.inputType option[value="'+value.type+'"]').prop('selected', true);
								console.log(value.type);
								if(value.type == 'sources'){
									var str1 = '<option value="">Choose..</option>';
									sources.forEach(function(elem){
										str1+= '<option value="'+elem+'">'+elem+'</option>';
									})
									
									clas.find('.inputValue').empty().append(str1);
									clas.find('.inputValue option[value="'+value.typeValue+'"]').prop('selected', true);
									clas.find('.inputValue').parent('div').show();
									
									
								}else if(value.type == 'custom'){
									clas.find('.inputValue').parent('div').hide();
									clas.find('.inputTag').parent('div').hide();
									clas.find('.customValue').val(value.customValue);
									clas.find('.customValue').parent('div').show();
									
								}else if(value.type == 'property'){
									var str1 = '<option value="">Choose..</option>';
									property.forEach(function(elem){
										str1+= '<option value="'+elem+'">'+elem+'</option>';
									})
									
									clas.find('.inputValue').empty().append(str1);
									clas.find('.inputValue option[value="'+value.typeValue+'"]').prop('selected', true);
									clas.find('.inputValue').parent('div').show();
									clas.find('.inputTag').parent('div').hide();
									
								}
								if(value.tag != ''){
									clas.find('.inputTag').val(value.tag);
									clas.find('.inputTag').parent('div').show();
								}
								
								if(value.splitDel != ''){
									clas.find('.splitDem').val(value.splitDel);
									clas.find('.splitValue option[value="'+value.splitValue+'"]').prop('selected', true);
									clas.find('.splitDem').parent('div').show();
									clas.find('.add_item_split').text('Remove Split');
								}
								if(value.between1 != ''){
									clas.find('.between1').val(value.between1);
									clas.find('.between2').val(value.between2);
									clas.find('.between1').parent('div').show();
									clas.find('.add_item_between').text('Remove Between');
								}
								if(value.indexValue != ''){
									clas.find('.indexValue').val(value.indexValue);
									clas.find('.indexValue').parent('div').show();
									clas.find('.add_item_index').text('Remove IndexOf');
								}
								k++
							}
				$('.rule_item li').removeClass('active');
				$(this).addClass('active');
			}
		})
		
		$('.delete_item').on('click', function(){
			var r = confirm("Are you sure, you want to delete this rule!");
			if(r){
				$('.rule_item li').each(function(){
					if($(this).hasClass('active')){
						$(this).remove();
					}
				})
				$('.rule_item ul li:last-child').addClass('active');
				$('.rule_item li').each(function(){
					if($(this).hasClass('active')){
						$('.desc_item .content').remove();
					$('.desc_item .result').remove();
						var data = $(this).data('rule_data');
						console.log(data);
						var i = 1;
						var len = data.rule.rules.length;
						for (const [key, value] of Object.entries(data.rule.rules)) {
							
							//if(key != 0 && key != len){
								var id = 'content'+i;
								$('.hidden > .content').attr('id', id);
								if(i == 1){
									$('.hidden > .content .delete_item_row').hide();
								}else{
									$('.hidden > .content .delete_item_row').show();
								}
								var str = $('.hidden').html();
								$('.desc_item .resultant').before(str);
								var clas = $('.desc_item #'+id);
								clas.find('.inputType option[value="'+value.type+'"]').prop('selected', true);
								if(value.type == 'sources'){
									var str1 = '<option value="">Choose..</option>';
									sources.forEach(function(elem){
										str1+= '<option value="'+elem+'">'+elem+'</option>';
									})
									
									clas.find('.inputValue').empty().append(str1);
									
								}else if(value.type == 'property'){
									var str1 = '<option value="">Choose..</option>';
									property.forEach(function(elem){
										str1+= '<option value="'+elem+'">'+elem+'</option>';
									})
									
									clas.find('.inputValue').empty().append(str1);
									
								}
								clas.find('.inputValue option[value="'+value.typeValue+'"]').prop('selected', true);
								if(value.tag != ''){
									clas.find('.inputTag').val(value.tag);
									clas.find('.inputTag').show();
								}
								clas.find('.inputAction option[value="'+value.action+'"]').prop('selected', true);
								if(value.actionValue != ''){
									clas.find('.inputActionValue').val(value.actionValue);
									clas.find('.inputActionValue').parent('div').show();
								}
								if(value.actionResultValue != ''){
									clas.find('.inputActionResultValue').val(value.actionResultValue);
									clas.find('.inputActionResultValue').parent('div').show();
								}
								if(value.actionDelimeter != ''){
									clas.find('.inputActionDelimeter').val(value.actionDelimeter);
									clas.find('.inputActionDelimeter').parent('div').show();
								}
								if(value.actionDelimeterValue != ''){
									clas.find('.inputActionDelimeterValue').val(value.actionDelimeterValue);
									clas.find('.inputActionDelimeterValue').parent('div').show();
								}
								clas.find('.inputCondition option[value="'+value.condition+'"]').prop('selected', true);
								i++;
							//}
							}
							if(data.rule.defaultValue != ''){
								$('.desc_item .defaultValue').val(value.defaultValue);
							}else{
								$('.desc_item .defaultValue').val('');
							}
							if(data.rule.concatenate != ''){
								$('.desc_item .concat_check').prop('checked', true);
								$('.desc_item .concatdem').val(data.rule.concatenate);
								$('.desc_item .concatdem').show();
								
							}else{
								$('.desc_item .concat_check').prop('checked', false);
								$('.desc_item .concatdem').val('');
								$('.desc_item .concatdem').hide();
							}
							if(data.rule.skipword != ''){
								$('.desc_item .skip_check').prop('checked', true);
								$('.desc_item .skipword').val(data.rule.skipword);
								$('.desc_item .skipword').show();
								
							}else{
								$('.desc_item .skip_check').prop('checked', false);
								$('.desc_item .skipword').val('');
								$('.desc_item .skipword').hide();
							}
							if(data.rule.replaceword != ''){
								$('.desc_item .replace_check').prop('checked', true);
								$('.desc_item .replaceword').val(data.rule.replaceword);
								$('.desc_item .replaceword').show();
								
							}else{
								$('.desc_item .replace_check').prop('checked', false);
								$('.desc_item .replaceword').val('');
								$('.desc_item .replaceword').hide();
							}
							var k = 1;
							for (const [key, value] of Object.entries(data.rule.result)) {
								var id = 'result'+k;
								$('.hidden1 > .result').attr('id', id);
								if(k == 1){
									$('.hidden1 > .result .delete_item_row').hide();
								}else{
									$('.hidden1 > .result .delete_item_row').show();
								}
								var str = $('.hidden1').html();
								$('.desc_item .resultant').append(str);
								var clas = $('.resultant #'+id);
								clas.find('.inputType option[value="'+value.type+'"]').prop('selected', true);
								console.log(value.type);
								if(value.type == 'sources'){
									var str1 = '<option value="">Choose..</option>';
									sources.forEach(function(elem){
										str1+= '<option value="'+elem+'">'+elem+'</option>';
									})
									
									clas.find('.inputValue').empty().append(str1);
									clas.find('.inputValue option[value="'+value.typeValue+'"]').prop('selected', true);
									clas.find('.inputValue').parent('div').show();
									
									
								}else if(value.type == 'custom'){
									clas.find('.inputValue').parent('div').hide();
									clas.find('.inputTag').parent('div').hide();
									clas.find('.customValue').val(value.customValue);
									clas.find('.customValue').parent('div').show();
									
								}else if(value.type == 'property'){
									var str1 = '<option value="">Choose..</option>';
									property.forEach(function(elem){
										str1+= '<option value="'+elem+'">'+elem+'</option>';
									})
									
									clas.find('.inputValue').empty().append(str1);
									clas.find('.inputValue option[value="'+value.typeValue+'"]').prop('selected', true);
									clas.find('.inputValue').parent('div').show();
									clas.find('.inputTag').parent('div').hide();
									
								}
								if(value.tag != ''){
									clas.find('.inputTag').val(value.tag);
									clas.find('.inputTag').parent('div').show();
								}
								
								if(value.splitDel != ''){
									clas.find('.splitDem').val(value.splitDel);
									clas.find('.splitValue option[value="'+value.splitValue+'"]').prop('selected', true);
									clas.find('.splitDem').parent('div').show();
									clas.find('.add_item_split').text('Remove Split');
								}
								if(value.between1 != ''){
									clas.find('.between1').val(value.between1);
									clas.find('.between2').val(value.between2);
									clas.find('.between1').parent('div').show();
									clas.find('.add_item_between').text('Remove Between');
								}
								if(value.indexValue != ''){
									clas.find('.indexValue').val(value.indexValue);
									clas.find('.indexValue').parent('div').show();
									clas.find('.add_item_index').text('Remove IndexOf');
								}
								k++
							}
					}else{
					
						$('.desc_item content').remove();
						$('.resultant .result').remove();
						var id = 'content'+i;
						$('.hidden > .content').attr('id', id);
						if(i == 1){
							$('.hidden > .content .delete_item_row').hide();
						}else{
							$('.hidden > .content .delete_item_row').show();
						}
						var str = $('.hidden').html();
						$('.desc_item .resultant').before(str);
					}
				})
				
				if($('.rule_item li').length == 0){
						$('.desc_item .content').remove();
						$('.resultant .result').remove();
						var id = 'content1';
						$('.hidden > .content').attr('id', id);
						$('.hidden > .content .delete_item_row').hide();
						var str = $('.hidden').html();
						$('.desc_item .resultant').before(str);
						$('.hidden > .content').removeAttr('id');
						var item = 1;
						var id = 'result'+item;
						$('.hidden1 > .result').attr('id', id);
						$('.hidden1 > .result .delete_item_row').hide();
						var str = $('.hidden1').html();
						$('.desc_item .resultant').append(str);
						$('.hidden1 > .result').removeAttr('id');
						$('.concat_check').prop('checked',false);
						$('.desc_item .concatdem').hide();
						$('.desc_item .concatdem').val('');
						$('.skip_check').prop('checked',false);
						$('.desc_item .skipword').hide();
						$('.desc_item .skipword').val('');
						$('.replace_check').prop('checked',false);
						$('.desc_item .replaceword').hide();
						$('.desc_item .replaceword').val('');
						$('.desc_item .defaultValue').val('');
						
				}
				
				
			}
			
		})
		
		$(document).on('click', '.add_val', function(){
			$('.rule_item li').each(function(){
				if($(this).hasClass('active')){
					var h = {};
					var rule ='rule';
					h[rule] = {};
					h[rule]['result'] = [];
					h[rule]['rules'] = [];
					h[rule]['rulename'] = $(this).text();
					$('.desc_item .content').each(function(){
						var k = {};
						k['type'] = $(this).find('.inputType').val();
						k['typeValue'] = $(this).find('.inputValue').val();
						k['tag'] = $(this).find('.inputTag').val();
						k['action'] = $(this).find('.inputAction').val();
						k['actionValue'] = $(this).find('.inputActionValue').val();
						k['actionResultValue'] = $(this).find('.inputActionResultValue').val();
						k['actionDelimeter'] = $(this).find('.inputActionDelimeter').val();
						k['actionDelimeterValue'] = $(this).find('.inputActionDelimeterValue').val();
						k['condition'] = $(this).find('.inputCondition').val();
						h[rule]['rules'].push(k);
					})
					$('.desc_item .result').each(function(){
						var k = {};
						k['type'] = $(this).find('.inputType').val();
						k['typeValue'] = $(this).find('.inputValue').val();
						k['tag'] = $(this).find('.inputTag').val();
						k['customValue'] = $(this).find('.customValue').val();
						k['splitDel'] = $(this).find('.splitDem').val();
						k['splitValue'] = $(this).find('.splitValue').val();
						k['between1'] = $(this).find('.between1').val();
						k['between2'] = $(this).find('.between2').val();
						k['indexValue'] = $(this).find('.indexValue').val();
						h[rule]['result'].push(k);
					})
					h[rule]['concatenate'] = $('.desc_item .concatdem').val();
					h[rule]['skipword'] = $('.desc_item .skipword').val();
					h[rule]['replaceword'] = $('.desc_item .replaceword').val();
					h[rule]['defaultValue'] = $('.desc_item .defaultValue').val();
					$(this).data('rule_data',h);
				}
			})
			var rules = [];
			$('.rule_item li').each(function(){
				rules.push($(this).data('rule_data'));
			})
			var hh = {};
			var staticname = $('#staticName').val();
			hh[staticname] = {}
			hh[staticname]['rules'] = rules
			
			if(rules.length > 0){
				$.ajax({
					type:'POST',
					url:'/make-config',
					data:{country: $('#country').val(), setproperty: JSON.stringify(hh)}
				}).done(function(resp){
					$('.property_structure tr').each(function(){
						if($(this).find("td:eq(0)").text() == staticname){
							$(this).find("td:eq(1)").html('');
							var str = '';
							str+= '<span class="btn btn-danger" onClick="get_input('
							str+= "'"+staticname+"'";
							str+= ')" style="margin-left:10px;">Assigned</span>';
							$(this).find("td:eq(1)").html(str);
						}
					})
					$('.rule_item li').remove();
					$('.desc_item .content').remove();
					$('.desc_item .result').remove();
					var str1 = $('.hidden').html();
					$('.desc_item .resultant').before(str1);
					var str1 = $('.hidden1').html();
					$('.desc_item .resultant').append(str1);
					$('#key_add').val('');
					$('#staticName').val('');
					$('.concat_check').prop('checked',false);
					$('.desc_item .concatdem').hide();
					$('.desc_item .concatdem').val('');
					$('.desc_item .defaultValue').val('');
					$('.add_rule_modal').modal('hide');
				})
			}
		})
		
		$('.add_rule_modal').on('hidden.bs.modal', function () {
			$('.rule_item li').remove();
			$('.desc_item .content').remove();
			$('.desc_item .result').remove();
			var str1 = $('.hidden').html();
			$('.desc_item .resultant').before(str1);
			var str1 = $('.hidden1').html();
			$('.desc_item .resultant').append(str1);
			$('#key_add').val('');
			$('#staticName').val('');
			$('.concat_check').prop('checked',false);
			$('.desc_item .concatdem').hide();
			$('.desc_item .concatdem').val('');
			$('.desc_item .defaultValue').val('');
		});
		$(document).on('click', '.add_item_split', function(){
			if($(this).text() == 'Use Split'){
				$(this).parent('div').parent('div').find('.split').show();
				$(this).text('Remove Split');
			}else{
				$(this).parent('div').parent('div').find('.split').hide();
				$(this).text('Use Split');
			}
		})
		$(document).on('click', '.add_item_between', function(){
			if($(this).text() == 'Use Between'){
				$(this).parent('div').parent('div').find('.between').show();
				$(this).text('Remove Between');
			}else{
				$(this).parent('div').parent('div').find('.between').hide();
				$(this).text('Use Between');
			}
		})
		$(document).on('click', '.add_item_index', function(){
			if($(this).text() == 'Use IndexOf'){
				$(this).parent('div').parent('div').find('.index').show();
				$(this).text('Remove IndexOf');
			}else{
				$(this).parent('div').parent('div').find('.index').hide();
				$(this).text('Use IndexOf');
			}
		})
		$('.concat_check').on('click', function(){
			if($(this).is(':checked')){
				$('.concatdem').val('');
				$('.concatdem').show();
			}else{
				$('.concatdem').val('');
				$('.concatdem').hide();
			}
		})
		$('.replace_check').on('click', function(){
			if($(this).is(':checked')){
				$('.replaceword').val('');
				$('.replaceword').show();
			}else{
				$('.replaceword').val('');
				$('.replaceword').hide();
			}
		})
		$('.skip_check').on('click', function(){
			if($(this).is(':checked')){
				$('.skipword').val('');
				$('.skipword').show();
			}else{
				$('.skipword').val('');
				$('.skipword').hide();
			}
		})
		</script>
	</body>
</html>